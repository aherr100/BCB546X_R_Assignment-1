check1 <- read.csv("./maize_decreasing_1.csv",1)
check1
check2 <- read.csv("./teosinte_decreasing_10.csv",1)
check2
check2$Position
check1$Position
check1$Chromosome
check1$Position
check2 <- read.csv("./teosinte_decreasing_10.csv",1)
check2$Chromosome
check1 <- read.csv("./maize_decreasing_1.csv",1)
check1$Chromosome
check1$Position
check2 <- read.csv("./teosinte_decreasing_10.csv",1)
check2$Chromosome
check2$Position
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("reshape2")) install.packages("reshape2")
if (!require("tidyr")) install.packages("tidyr")
if (!require("plyr")) install.packages("plyr")
library(tidyverse)
library(ggplot2)
library(reshape2)
library(tidyr)
library(plyr)
file.info("fang_et_al_genotypes")
dim(fang_et_al_genotypes)
fang_et_al_genotypes <- read.table("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2018/master/assignments/UNIX_Assignment/fang_et_al_genotypes.txt", header = TRUE, sep = "\t")
snp_position <- read.table("https://raw.githubusercontent.com/EEOB-BioData/BCB546X-Fall2018/master/assignments/UNIX_Assignment/snp_position.txt", header = TRUE, sep = "\t")
file.info("fang_et_al_genotypes")
dim(fang_et_al_genotypes)
str(fang_et_al_genotypes)
colnames(fang_et_al_genotypes)
head(fang_et_al_genotypes, n = 5)
file.info("snp_position")
dim(snp_position)
str(snp_position)
colnames(snp_position)
head(snp_position, n = 5)
maize_fang <- fang_et_al_genotypes[which(fang_et_al_genotypes$Group == "ZMMIL" | fang_et_al_genotypes$Group == "ZMMLR" | fang_et_al_genotypes$Group == "ZMMMR"),]
teosinte_fang <- fang_et_al_genotypes[which(fang_et_al_genotypes$Group == "ZMPBA" | fang_et_al_genotypes$Group == "ZMPIL" | fang_et_al_genotypes$Group == "ZMPJA"),]
maize_fang <- fang_et_al_genotypes[which(fang_et_al_genotypes$Group == "ZMMIL" | fang_et_al_genotypes$Group == "ZMMLR" | fang_et_al_genotypes$Group == "ZMMMR"),]
teosinte_fang <- fang_et_al_genotypes[which(fang_et_al_genotypes$Group == "ZMPBA" | fang_et_al_genotypes$Group == "ZMPIL" | fang_et_al_genotypes$Group == "ZMPJA"),]
snp_position_subset <- snp_position[,c(1,3,4)]
snp_position_subset <- snp_position[,c(1,3,4)]
maize_fang_transposed <- as.data.frame(t(maize_fang[,-1]))
colnames(maize_fang_transposed) <- maize_fang$Sample_ID
teosinte_fang_transposed <- as.data.frame(t(teosinte_fang[,-1]))
colnames(teosinte_fang_transposed) <- teosinte_fang$Sample_ID
teosinte_fang_transposed <- cbind(SNP_ID = row.names(teosinte_fang_transposed), teosinte_fang_transposed)
maize_fang_transposed <- cbind(SNP_ID = row.names(maize_fang_transposed), maize_fang_transposed)
merge_maize <- merge(maize_fang_transposed, snp_position, by = "SNP_ID")
merge_teosinte <- merge(teosinte_fang_transposed, snp_position, by = "SNP_ID")
#merge_maize$Position <- as.numeric(as.character(merge_maize$Position))
#merge_maize$Chromosome <- as.numeric(as.character(merge_maize$Chromosome))
#merge_maize <- merge_maize[!(merge_maize$Position == "unknown")]
#merge_maize <- merge_maize[!(merge_maize$Chromosome == "unknown")]
#merge_maize <- merge_maize[!(merge_maize$Chromosome == "multiple")]
#merge_maize <- merge_maize[!(is.na(merge_maize$Position))]
#merge_maize[merge_maize=="N/A"] <- "?/?"
#merge_maize[is.na(merge_maize)] <- "?/?"
#merge_teosinte[merge_teosinte == "N/A"] <- "?/?"
#merge_teosinte[is.na(merge_teosinte)] <- "?/?"
#merge_maize_reverse[is.na(merge_maize_reverse)] <- "?/?"
#merge_teosinte_reverse[is.na(merge_teosinte_reverse)] <- "?/?"
merge_maize <- merge_maize[order(merge_maize$Position),]
merge_teosinte <- merge_teosinte[order(merge_teosinte$Position),]
merge_maize_reverse <- merge_maize[order(merge_maize$Position,decreasing = T),]
merge_teosinte_reverse <- merge_teosinte[order(merge_teosinte$Position,decreasing = T),]
for (i in 1:10){
merge_maize_chromosome <- merge_maize[merge_maize$Chromosome == i,]
write.csv(merge_maize_chromosome, file=paste("maize_increasing_",i,".csv",sep=""))
}
for (i in 1:10){
merge_maize_chromosome_rev <- merge_maize_reverse[merge_maize_reverse$Chromosome == i,]
suppressWarnings(merge_maize_chromosome_rev[merge_maize_chromosome_rev == "?/?"] <- factor("-/-"))
write.csv(merge_maize_chromosome_rev, file=paste("maize_decreasing_",i,".csv",sep=""))
}
for (i in 1:10){
merge_teosinte_chromosome <- merge_teosinte[merge_teosinte$Chromosome == i,]
write.csv(merge_teosinte_chromosome, file=paste("teosinte_increasing_",i,".csv",sep=""))
}
for (i in 1:10){
merge_teosinte_chromosome_rev <- merge_teosinte_reverse[merge_teosinte_reverse$Chromosome == i,]
suppressWarnings(merge_teosinte_chromosome_rev[merge_teosinte_chromosome_rev == "?/?"] <- factor("-/-"))
write.csv(merge_teosinte_chromosome_rev, file=paste("teosinte_decreasing_",i,".csv",sep=""))
}
fang_transposed <- as.data.frame(t(fang_et_al_genotypes[,-1]))
fang_transposed <- cbind(SNP_ID = row.names(fang_transposed), fang_transposed)
merge_fang <- merge(fang_transposed, snp_position, by = "SNP_ID")
merge_fang$Chromosome <- factor(merge_fang$Chromosome)
ggplot(merge_fang, aes((Chromosome))) + geom_bar()
ggplot(fang_et_al_genotypes, aes(Group)) + geom_bar()
fang_melted <- melt(fang_et_al_genotypes, id = c("Sample_ID", "Group"))
fang_melted[fang_melted == "?/?" ] = NA
fang_melted$Homozygous <- (fang_melted$value=="A/A" | fang_melted$value=="C/C" | fang_melted$value=="G/G" | fang_melted$value=="T/T")
ggplot(fang_melted, aes(Homozygous)) + geom_bar()
fang_melted_group <- fang_melted[order(fang_melted$Group),]
fang_melted_ID <- fang_melted[order(fang_melted$Sample_ID),]
fang_melted_group_prop <- ddply(fang_melted_group, c("Group"), summarise, homo=sum(Homozygous, na.rm=TRUE),
heter=sum(Homozygous, na.rm=FALSE), NotValid=sum(is.na(Homozygous)))
group_prop_melt <- melt(fang_melted_group_prop, measure.vars = c("homo", "heter", "NotValid"))
fang_melted_ID_prop <- ddply(fang_melted_ID, c("Sample_ID"), summarise, homo=sum(Homozygous, na.rm=TRUE),
heter=sum(Homozygous, na.rm=FALSE), NotValid=sum(is.na(Homozygous)))
ID_prop_melt <- melt(fang_melted_ID_prop, measure.vars = c("homo", "heter", "NotValid"))
ggplot(group_prop_melt,aes(x = Group, y= value, fill=variable)) + geom_bar(stat = "identity", position = "stack")
ggplot(ID_prop_melt,aes(x = Sample_ID, y= value, fill=variable)) + geom_bar(stat = "identity", position = "stack")
fang_melted$AT <- (fang_melted$value=="A/A" | fang_melted$value=="T/T")
fang_melted$GC <- (fang_melted$value=="G/G" | fang_melted$value=="C/C")
fang_melted_group <- fang_melted[order(fang_melted$Group),]
fang_melted_AT_GC <- ddply(fang_melted_group, c("Group"), summarise, A_or_T_homozygous=sum(AT, na.rm=TRUE),
G_or_C_homozygous=sum(GC, na.rm=TRUE))
fang_melted_AT_GC_melt <- melt(fang_melted_AT_GC, measure.vars = c("A_or_T_homozygous", "G_or_C_homozygous"))
ggplot(fang_melted_AT_GC_melt,aes(x = Group, y= value, fill=variable)) + geom_bar(stat = "identity", position = "stack")
